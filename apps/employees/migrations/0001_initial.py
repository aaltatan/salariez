# Generated by Django 5.0.1 on 2024-09-29 15:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("areas", "0004_alter_area_name"),
        ("departments", "0003_alter_department_name"),
        ("job_subtypes", "0003_alter_jobsubtype_name"),
        ("nationalities", "0004_alter_nationality_name"),
        ("positions", "0003_alter_position_name"),
        ("statuses", "0002_alter_status_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "firstname",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                2,
                                "name of the object should not be less than 2 characters.",
                            )
                        ],
                        verbose_name="first name",
                    ),
                ),
                (
                    "lastname",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                2,
                                "name of the object should not be less than 2 characters.",
                            )
                        ],
                        verbose_name="last name",
                    ),
                ),
                (
                    "father_name",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                2,
                                "name of the object should not be less than 2 characters.",
                            )
                        ],
                        verbose_name="father name",
                    ),
                ),
                (
                    "mother_name",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                2,
                                "name of the object should not be less than 2 characters.",
                            )
                        ],
                        verbose_name="mother name",
                    ),
                ),
                (
                    "birth_place",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                2,
                                "name of the object should not be less than 2 characters.",
                            )
                        ],
                        verbose_name="birth place",
                    ),
                ),
                ("birth_date", models.DateField()),
                (
                    "national_id",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "department id must be numbers only"
                            )
                        ],
                        verbose_name="national id",
                    ),
                ),
                (
                    "card_id",
                    models.CharField(
                        max_length=255,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "department id must be numbers only"
                            )
                        ],
                        verbose_name="card id",
                    ),
                ),
                (
                    "civil_registry_office",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="civil registry office",
                    ),
                ),
                (
                    "registry_office_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="registry office name",
                    ),
                ),
                (
                    "registry_office_id",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "department id must be numbers only"
                            )
                        ],
                        verbose_name="registry office id",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        default="M",
                        max_length=6,
                    ),
                ),
                (
                    "face_color",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="face color",
                    ),
                ),
                (
                    "eyes_color",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="eyes color",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="address"
                    ),
                ),
                (
                    "special_signs",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=255,
                        verbose_name="special signs",
                    ),
                ),
                ("card_date", models.DateField(blank=True, null=True)),
                (
                    "martial_status",
                    models.CharField(
                        choices=[
                            ("M", "Married"),
                            ("S", "Single"),
                            ("D", "Divorced"),
                            ("O", "Other"),
                        ],
                        default="S",
                        max_length=6,
                    ),
                ),
                (
                    "military_status",
                    models.CharField(
                        choices=[
                            ("D", "Defremented"),
                            ("F", "Finished"),
                            ("E", "Excused"),
                            ("O", "Other"),
                        ],
                        default="E",
                        max_length=6,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("A", "Active"), ("I", "Inactive")],
                        default="A",
                        max_length=7,
                    ),
                ),
                ("hire_date", models.DateField()),
                (
                    "institution_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "department id must be numbers only"
                            )
                        ],
                        verbose_name="institution id",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, default="", max_length=1000, verbose_name="notes"
                    ),
                ),
                (
                    "profile",
                    models.ImageField(blank=True, null=True, upload_to="profiles"),
                ),
                (
                    "identity_document",
                    models.FileField(blank=True, null=True, upload_to="identities"),
                ),
                (
                    "salary",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        blank=True,
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="areas.area",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="departments.department",
                    ),
                ),
                (
                    "job_status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="statuses.status",
                    ),
                ),
                (
                    "job_subtype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="job_subtypes.jobsubtype",
                    ),
                ),
                (
                    "nationality",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="nationalities.nationality",
                    ),
                ),
                (
                    "position",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="employees",
                        to="positions.position",
                    ),
                ),
            ],
            options={
                "ordering": ["department__department_id", "firstname"],
            },
        ),
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=255, verbose_name="email")),
                ("notes", models.TextField(blank=True, default="", max_length=255)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emails",
                        to="employees.employee",
                    ),
                ),
            ],
            options={
                "unique_together": {("employee", "email")},
            },
        ),
        migrations.CreateModel(
            name="Mobile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mobile",
                    models.CharField(
                        help_text="mobile number must be like 0947302503",
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^09\\d{8}$", "mobile number must be like 0947302503"
                            )
                        ],
                        verbose_name="phone",
                    ),
                ),
                ("has_whatsapp", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True, default="", max_length=255)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mobiles",
                        to="employees.employee",
                    ),
                ),
            ],
            options={
                "unique_together": {("employee", "mobile")},
            },
        ),
        migrations.CreateModel(
            name="Phone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="phone number must be like 0332756651",
                        max_length=255,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^0\\d{2}\\d{4,8}$",
                                "phone number must be like 0332756651",
                            )
                        ],
                        verbose_name="phone",
                    ),
                ),
                ("notes", models.TextField(blank=True, default="", max_length=255)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="phones",
                        to="employees.employee",
                    ),
                ),
            ],
            options={
                "unique_together": {("employee", "phone")},
            },
        ),
    ]
